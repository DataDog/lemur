variables:
  CURRENT_CI_IMAGE: v7679051-11c779a8
  KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: lemur

stages:
  - build-image
  - build-prod-image
  - tests

build-image:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/images:$CURRENT_CI_IMAGE
  stage: build-image
  when: on_success
  # the 3h timeout is required for images compiling large projects for ARM using qemu
  # we can revert back to 1h when we use native builders for ARM
  timeout: 3h
  tags: ["arch:amd64"]
  variables:
    CI_ENABLE_CONTAINER_IMAGE_BUILDS: "true"
  script:
    - cd publish/test && docker buildx build --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/lemur:v$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA --push .

# build a prod image when we create a new tag
build-prod-image:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/images:$CURRENT_CI_IMAGE
  stage: build-prod-image
  when: on_success
  # the 3h timeout is required for images compiling large projects for ARM using qemu
  # we can revert back to 1h when we use native builders for ARM
  timeout: 3h
  tags: ["arch:amd64"]
  variables:
    CI_ENABLE_CONTAINER_IMAGE_BUILDS: "true"
  script:
    - cd publish/test && docker buildx build --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/lemur:$CI_COMMIT_TAG --push .
  only:
    - tags

tests:
  services:
    - postgres:12
  variables:
    POSTGRES_USER: lemur
    POSTGRES_PASSWORD: lemur
  script:
    - apt-get update -qy
    - apt-get install -y make software-properties-common curl
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    - apt-get update
    - apt-get install -y npm libldap2-dev libsasl2-dev libldap2-dev libssl-dev
    - pip install pip==20.0.2
    - pip install coveralls bandit
    - pip install -e .
    - pip install "file://`pwd`#egg=lemur[dev]"
    - pip install "file://`pwd`#egg=lemur[tests]"
    - make test

