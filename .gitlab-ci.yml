variables:
  CURRENT_CI_IMAGE: v7679051-11c779a8
  KUBERNETES_SERVICE_ACCOUNT_OVERWRITE: lemur

stages:
  - build-image
  - build-test-image
  - build-prod-image

build-image:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/images:$CURRENT_CI_IMAGE
  stage: build-image
  when: on_success
  # the 3h timeout is required for images compiling large projects for ARM using qemu
  # we can revert back to 1h when we use native builders for ARM
  timeout: 3h
  tags: ["arch:amd64"]
  variables:
    CI_ENABLE_CONTAINER_IMAGE_BUILDS: "true"
  script:
    - cd publish&& docker buildx build --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/lemur:v$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA --push .

# build a prod image when we create a new tag
build-prod-image:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/images:$CURRENT_CI_IMAGE
  stage: build-prod-image
  when: on_success
  # the 3h timeout is required for images compiling large projects for ARM using qemu
  # we can revert back to 1h when we use native builders for ARM
  timeout: 3h
  tags: ["arch:amd64"]
  variables:
    CI_ENABLE_CONTAINER_IMAGE_BUILDS: "true"
  script:
    - cd publish && docker buildx build --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/lemur:$CI_COMMIT_TAG --push .
  only:
    - tags

# build a specific test image for our needs
build-test-image:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/images:$CURRENT_CI_IMAGE
  stage: build-test-image
  when: on_success
  timeout: 3h
  tags: [ "arch:amd64" ]
  variables:
    CI_ENABLE_CONTAINER_IMAGE_BUILDS: "true"
  script:
    - cd publish && docker buildx build . -f ci_test.Dockerfile --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} --tag 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/lemur:test-v$CI_PIPELINE_ID-$CI_COMMIT_SHORT_SHA --push .

